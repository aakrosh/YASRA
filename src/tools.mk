#plot the profiles of the top two alleles. F=Assembly.qual. S=size of arrow
alleles:
	cat $F | grep ^[0-9] | nl | \
		awk '{data[1]=$$4; data[2]=$$5; data[3]=$$6; data[4]=$$7; \
			n=asort(data); print $$1, data[4], data[3]}' > fake
	echo set term postscript eps color solid \"Times-Roman\" 20 > plot.gp
	echo set output \'plot_alleles.eps\' >> plot.gp
	echo set title \"Profiles for the top two bases\(A,C,T,G\)\" >> plot.gp
	echo set xlabel \"Position on the contig\" >> plot.gp
	echo set ylabel \"Number of reads supporting the base\" >> plot.gp
	cat $F | awk 'NR > 3' | nl | grep Contig | \
		awk '{printf "set arrow from %s,-$S to %s,0 lt 1 lw 5 nohead\n",\
		$$1-1, $$1-1 }' >> plot.gp
	echo plot \'fake\' using 1:2 title \"Called Base\" with lines, \
		\'fake\' using 1:3 title \"Second highest supported base\" \
		with lines >> plot.gp
	gnuplot < plot.gp
	rm fake plot.gp

#plot the coverage through the contig.F=Assembly.qual S=size of arrow
coverage:
	cat $F | grep ^[0-9] | nl | \
		awk '{print $$1, $$9}' > fake
	echo set term postscript eps color solid \"Times-Roman\" 20 > plot.gp
	echo set output \'plot_coverage.eps\' >> plot.gp
	echo set xlabel \"Position on the contig\" >> plot.gp
	echo set ylabel \"Coverage\" >> plot.gp
	cat $F | awk 'NR > 3' | nl | grep Contig | \
		awk '{printf "set arrow from %s,-$S to %s,0 lt 1 lw 5 nohead\n",\
		$$1-1, $$1-1 }' >> plot.gp
	echo plot \'fake\' using 1:2 title \"Coverage\"  with lines >> plot.gp
	gnuplot < plot.gp
	rm fake plot.gp

#plot the coverage through the contig using the hits file generated by 
#template_hits F=hits_template.fa R=max_range of coverage to be seen on graph
hit_cov:
	cat $F | grep '>' | \
	awk '{for (i=$$2+1; i <=$$3; i++) a[i]++}; \
	  END{for (i=1; i<=$$3; i++) if(a[i]) print i,a[i]; else print i,0}'\
	  > hits.txt
	echo "set term postscript eps color \"Times-Roman\" 20" > plot.gp
	echo "set output 'hit_cov.eps'" >> plot.gp
	echo "set xlabel \"Position\"" >> plot.gp
	echo "set ylabel \"Coverage\"" >> plot.gp
	echo "set yrange [0:$R]" >> plot.gp
	echo "plot 'hits.txt' using 1:2 title \"Hits\" with lines lt -1" >> plot.gp
	gnuplot < plot.gp
	rm hits.txt plot.gp


#this is for MAlign/ReMAlign. Given a column number print the reads for the 
#column F=Maligm/ReMAlign, C=column number (1-based)
reads:
	cat $F | \
	awk '{print substr($$0, $C, 1)}' | \
	awk '{printf "%s", $$0}' | \
	tr '\040' '\012' |\
	awk '{if(length($$0) > 1) print $$0}'| wc -l

#plot the hits and rejections for the given contig. F=$(HITS)
rejects:
	cat $H | grep '>' | \
	awk '{for (i=$$2+1; i <=$$3; i++) a[i]++}; \
	  END{for (i=1; i<=$$3; i++) if(a[i]) print i,a[i]; else print i,0}'\
	  > hits.txt
	cat $R | grep '>' | awk '{for (i=$$2+1; i <=$$3; i++) a[i]++}; \
	  END{for (i=1; i<=$$3; i++) if(a[i]) print i,a[i]; else print i,0}' \
	  > rejects.txt
	echo "set term postscript eps color \"Times-Roman\" 20" > plot.gp
	echo "set output 'plot_rejects.eps'" >> plot.gp
	echo "set xlabel \"Position\"" >> plot.gp
	echo "set ylabel \"Coverage\"" >> plot.gp
	cat $C | awk '{printf "set arrow from %s,-4 to %s,0 lt 1 lw 5 nohead\n", $$3, $$3}' >> plot.gp
	echo "plot 'hits.txt' using 1:2 title \"Hits\" with lines lt -1, 'rejects.txt' using 1:2 title \"Rejects\" with lines lt 1" >> plot.gp
	gnuplot < plot.gp
	rm hits.txt rejects.txt plot.gp

#glean some information about this organism, input is the genome F=genome.fa
report:
	@cat $F | grep -v '>' | \
	awk '{for(i=1; i <= length($$0); i=i+1) if (substr($$0, i,1) == "C" || substr($$0,i,1) == "G") a=a+1; l=l+length($$0)}; END{printf "length of the genome = %d\nGC content = %3.2f%\n", l, a*100/l}'

#find the percent identity between the two R=first genome.fa T=second 
#genome.fa)
pid:
	lastz $R $T --format=text B=0 C=2 | grep "|\|:" | grep -v score |\
	awk '{print substr($$0, 12)}' |\
	awk '{for(i=1; i <= length($$0); i=i+1) {if (substr($$0, i,1) == "|") a=a+1; if(substr($$0, i, 1) == ":" || substr($$0,i,1) == " ") m=m+1}}; END{printf "Similarity = %d %d %3.2f%\n", a, m, a*100/(a+m)}'

